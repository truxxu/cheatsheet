{"componentChunkName":"component---node-modules-gatsby-theme-document-src-templates-docs-js","path":"/dev/flutter","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Flutter\",\n  \"description\": \"Flutter setup guide\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Install flutter using snap\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"sudo snap install flutter --classic\\n\")), mdx(\"p\", null, \"Display SDK path\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"flutter sdk-path\\n\")), mdx(\"p\", null, \"Add to .zshrc\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"export PATH=$PATH:$HOME/snap/flutter/common/flutter\\n\")), mdx(\"p\", null, \"Verify that flutter is now in PATH\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"echo $PATH\\n\")), mdx(\"p\", null, \"Verify that flutter command is available\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"which flutter\\n\")), mdx(\"p\", null, \"Install Command Line Tools for Android\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Android Studio > SDK Manager > SDK Tools > Android SDK Command-line tools (latest)\\n\")), mdx(\"p\", null, \"Accept remaining License agreements\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"flutter doctor --android-licenses\\n\")), mdx(\"p\", null, \"Check for necessary dependencies\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"flutter doctor\\n\")), mdx(\"p\", null, \"Setup for Linux desktop\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"sudo apt-get install clang cmake ninja-build pkg-config libgtk-3-dev\\n\")), mdx(\"p\", null, \"Enable Linux desktop support\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"flutter config --enable-linux-desktop\\n\")), mdx(\"p\", null, \"Install the Flutter and Dart plugins for VSCode\"), mdx(\"p\", null, \"Validate setup for VSCode. View > Command Palette > doctor > Flutter: Run Flutter Doctor\"), mdx(\"p\", null, \"Create a new app\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"flutter create myapp\\ncd myapp\\n\")), mdx(\"p\", null, \"Start the app\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"flutter run\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"frontmatter":{"title":"Flutter","description":"Flutter setup guide"}}},"pageContext":{"id":"c9b23b88-8a65-5bd4-a969-bc5bc0eda215"}},"staticQueryHashes":["2575348879","2936798523","2940813629"]}