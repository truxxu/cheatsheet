{"componentChunkName":"component---node-modules-gatsby-theme-document-src-templates-docs-js","path":"/dev/texteditor","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Text Editor\",\n  \"description\": \"Config for text Editor\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A text editor is fundamental in the webdev workflow. Currently there are many\\ngood alternatives. Some of the most used editors include Atom, Vim, Emacs,\\nVisual Studio Code and more. In this case, my preference is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Sublime Text\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -\\nsudo apt install -y apt-transport-https\\necho \\\"deb https://download.sublimetext.com/ apt/stable/\\\" | sudo tee /etc/apt/sources.list.d/sublime-text.list\\nsudo apt update\\nsudo apt install -y sublime-text\\n\")), mdx(\"p\", null, \"Plugins offer new and expanded functionalities. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Package Control\"), \" must be intalled\\nfirst.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sublime plugins\", mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"A File Icon\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"AdvancedNewFile\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Alignment\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"All Autocomplete\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Auto FileName\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Babel\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Emmet\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"ERB Snippets\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Git\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Latest Migration\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"MagicPython\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Package Control\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"SCSS\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"SublimeLinter\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"SublimeLinter-rubocop\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"BracketHighlighter\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Color Highlight\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"ESLint\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"GitGutter\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"JsPrettier\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"PyV8\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"React Native Autocomplete\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"SideBarEnhancements\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"SideBarMenuAdvanced\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Sublime ES6 React Redux\")))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"frontmatter":{"title":"Text Editor","description":"Config for text Editor"}}},"pageContext":{"id":"5acffdc8-edcf-5a63-a114-81afd79650aa"}},"staticQueryHashes":["2575348879","2936798523","2940813629"]}