{"componentChunkName":"component---node-modules-gatsby-theme-document-src-templates-docs-js","path":"/dev/native","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"React Native\",\n  \"description\": \"RN Setup\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"android-studio-aug-2020\"\n  }, \"Android Studio (Aug. 2020)\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"sudo snap install android-studio --classic\\n\")), mdx(\"p\", null, \"Once installed, navigate to Android SDK and make sure the following components are installed:\"), mdx(\"p\", null, \"Android 10 (Q)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Android SDK Platform 29\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sources for Android 29\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Android SDK Build-Tools 29.0.2\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Android Emulator\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Android SDK Platform-Tools\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Google Play Intel x86 Atom_64 System Image (android-29)\")), mdx(\"p\", null, \"Add to .zshrc\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"export ANDROID_HOME=$HOME/Android/Sdk\\nexport PATH=$PATH:$ANDROID_HOME/emulator\\nexport PATH=$PATH:$ANDROID_HOME/tools\\nexport PATH=$PATH:$ANDROID_HOME/tools/bin\\nexport PATH=$PATH:$ANDROID_HOME/platform-tools\\n\")), mdx(\"p\", null, \"Restart the terminal and verify installation\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"echo $ANDROID_HOME\\necho $PATH\\n\")), mdx(\"h2\", {\n    \"id\": \"watchman\"\n  }, \"Watchman\"), mdx(\"p\", null, \"RN docs recommend installing from source\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"sudo apt install libssl-dev autoconf automake libtool\\ngit clone https://github.com/facebook/watchman.git -b v4.9.0 --depth 1\\ncd watchman \\n./autogen.sh\\n./configure --without-python --without-pcre --enable-lenient\\nmake\\nsudo make install\\n\")), mdx(\"h2\", {\n    \"id\": \"kvm\"\n  }, \"KVM\"), mdx(\"p\", null, \"Check if your cpu supports virtualization\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"sudo apt-get install cpu-checker\\nkvm-ok\\n\")), mdx(\"p\", null, \"Check if your cpu supports the required set of instructions\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"egrep -c '(vmx|svm)' /proc/cpuinfo\\n\")), mdx(\"p\", null, \"where the returned value must be greater than 0\"), mdx(\"p\", null, \"Enable virtualization in bios\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"sudo apt-get install qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils\\nsudo adduser `id -un` libvirt\\nsudo adduser `id -un` kvm\\n\")), mdx(\"p\", null, \"Verify installation\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"virsh list --all\\n\")), mdx(\"h2\", {\n    \"id\": \"emulator\"\n  }, \"Emulator\"), mdx(\"p\", null, \"Check AVD/physical device is present\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"adb devices\\n\")), mdx(\"p\", null, \"List available emulators\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"emulator -list-avds\\n\")), mdx(\"h2\", {\n    \"id\": \"debugger\"\n  }, \"Debugger\"), mdx(\"p\", null, \"Standalone app for debugging RN apps\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"https://github.com/jhen0409/react-native-debugger/releases/download/v0.11.4/react-native-debugger_0.11.4_amd64.deb\\n\")), mdx(\"h2\", {\n    \"id\": \"start-a-new-project\"\n  }, \"Start a new project\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"npx react-native init AwesomeProject\\n\")), mdx(\"h2\", {\n    \"id\": \"run-your-rn-application\"\n  }, \"Run your RN application\"), mdx(\"p\", null, \"Open emulator\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"emulator @emulator_name\\n\")), mdx(\"p\", null, \"Start Metro server\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"npx react-native start\\n\")), mdx(\"p\", null, \"Start application\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"npx react-native run-android\\n\")), mdx(\"h2\", {\n    \"id\": \"generate-apk-file\"\n  }, \"Generate APK file\"), mdx(\"p\", null, \"Create signing key\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"keytool -genkey -v -keystore your_key_name.keystore -alias your_key_alias -keyalg RSA -keysize 2048 -validity 10000\\n\")), mdx(\"p\", null, \"Move key into android folder\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"mv ./mykey.keystore ./android/app\\n\")), mdx(\"p\", null, \"Add variables to ~/.gradle/gradle.properties\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"MYAPP_UPLOAD_STORE_FILE=my-upload-key.keystore\\nMYAPP_UPLOAD_KEY_ALIAS=my-key-alias\\nMYAPP_UPLOAD_STORE_PASSWORD=*****\\nMYAPP_UPLOAD_KEY_PASSWORD=*****\\n\")), mdx(\"p\", null, \"Add signing config for release to android/app/build.gradle\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"release {\\n    if (project.hasProperty('MYAPP_UPLOAD_STORE_FILE')) {\\n        storeFile file(MYAPP_UPLOAD_STORE_FILE)\\n        storePassword MYAPP_UPLOAD_STORE_PASSWORD\\n        keyAlias MYAPP_UPLOAD_KEY_ALIAS\\n        keyPassword MYAPP_UPLOAD_KEY_PASSWORD\\n    }\\n}\\n\")), mdx(\"p\", null, \"Create folder android/app/src/main/assets\"), mdx(\"p\", null, \"Run command\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"npx react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle --assets-dest android/app/src/main/res/\\n\")), mdx(\"p\", null, \"Navigate to folder\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"cd android\\n\")), mdx(\"p\", null, \"Run command to generate AAB\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"./gradlew bundleRelease\\n\")), mdx(\"p\", null, \"Run command to generate APK\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"./gradlew assembleRelease\\n\")), mdx(\"p\", null, \"In case of build errors\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"cd ..\\n\\nrm -rf android/app/src/main/res/drawable-*\\n\\nnpx react-native bundle --platform android --dev false \\\\\\n  --entry-file index.js \\\\\\n  --bundle-output android/app/src/main/assets/index.android.bundle \\\\\\n  --assets-dest android/app/build/intermediates/res/merged/release/\\n\\ncd android && ./gradlew assembleRelease\\n\")), mdx(\"p\", null, \"Run to test a release version through adb\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"npx react-native run-android --variant=release\\n\")), mdx(\"p\", null, \"Find APK file\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"~/my-app/android/app/build/outputs/apk/release\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#android-studio-aug-2020","title":"Android Studio (Aug. 2020)"},{"url":"#watchman","title":"Watchman"},{"url":"#kvm","title":"KVM"},{"url":"#emulator","title":"Emulator"},{"url":"#debugger","title":"Debugger"},{"url":"#start-a-new-project","title":"Start a new project"},{"url":"#run-your-rn-application","title":"Run your RN application"},{"url":"#generate-apk-file","title":"Generate APK file"}]},"frontmatter":{"title":"React Native","description":"RN Setup"}}},"pageContext":{"id":"40602de3-8ef9-5b41-85ab-0be500236701"}},"staticQueryHashes":["2575348879","2936798523","2940813629"]}