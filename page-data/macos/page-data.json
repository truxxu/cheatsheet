{"componentChunkName":"component---node-modules-gatsby-theme-document-src-templates-docs-js","path":"/macos","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"WebDev Setup (macOS)\",\n  \"description\": \"Basic tools for development on Apple silicon\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"package-manager\"\n  }, \"Package manager\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# install brew\\n/bin/bash -c \\\"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\\\"\\n# in case of warning about adding brew to PATH\\necho 'eval \\\"$(/opt/homebrew/bin/brew shellenv)\\\"' >> ~/.zprofile\\neval \\\"$(/opt/homebrew/bin/brew shellenv)\\\"\\n# update software list\\nbrew update\\n# in case of error\\nsudo chown -R $USER:admin /usr/local\\nbrew update\\n# install useful software\\nbrew upgrade git || brew install git\\nbrew upgrade gh || brew install gh\\nbrew upgrade wget || brew install wget\\nbrew upgrade imagemagick || brew install imagemagick\\nbrew upgrade jq || brew install jq\\nbrew upgrade openssl || brew install openssl\\n\")), mdx(\"h2\", {\n    \"id\": \"terminal\"\n  }, \"Terminal\"), mdx(\"p\", null, \"Install iTerm2 from App store\"), mdx(\"h2\", {\n    \"id\": \"oh-my-zsh\"\n  }, \"Oh My Zsh!\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# check installation\\nzsh --version\\n# install zsh > 5.0.8\\nbrew install zsh\\n# make zsh default shell\\nchsh -s /usr/local/bin/zsh\\n# install Oh My Zsh!\\nsh -c \\\"$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\\\"\\n# restart computer\\n\")), mdx(\"p\", null, \"Plugins\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"last-working-dir\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"github\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"git\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"common-aliases\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"zsh-syntax-highlighting\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"history-substring-search\")), mdx(\"h2\", {\n    \"id\": \"xcode\"\n  }, \"Xcode\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# update software catalog\\nsudo softwareupdate --clear-catalog\\n# install xcode\\nxcode-select --install\\n\")), mdx(\"h2\", {\n    \"id\": \"create-ssh-key\"\n  }, \"Create SSH key\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"mkdir -p ~/.ssh && ssh-keygen -t ed25519 -o -a 100 -f ~/.ssh/id_ed25519 -C \\\"TYPE_YOUR_EMAIL@HERE.com\\\"\\n# Retrieve key\\ncat ~/.ssh/id_ed25519.pub\\n# Check key addition\\nssh -T git@github.com\\n# In case of error\\nssh-add ~/.ssh/id_ed25519\\n\")), mdx(\"h2\", {\n    \"id\": \"node\"\n  }, \"Node\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# install nvm\\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | zsh\\nexec zsh\\n# check nvm version\\nnvm -v\\n# install node lts\\nnvm install --lts\\n# check node version\\nnode -v\\n# clean cache\\nnvm cache clear\\n\")), mdx(\"h2\", {\n    \"id\": \"databases\"\n  }, \"Databases\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# install sqlite\\nbrew install sqlite\\n# check version\\nsqlite3 -version\\n# install postgresql\\nbrew install postgresql\\nbrew services start postgresql\\n# check install\\npsql -d postgres\\n\")), mdx(\"h2\", {\n    \"id\": \"code-editor\"\n  }, \"Code editor\"), mdx(\"p\", null, \"Install VSCode from official website, select Apple silicon\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#package-manager","title":"Package manager"},{"url":"#terminal","title":"Terminal"},{"url":"#oh-my-zsh","title":"Oh My Zsh!"},{"url":"#xcode","title":"Xcode"},{"url":"#create-ssh-key","title":"Create SSH key"},{"url":"#node","title":"Node"},{"url":"#databases","title":"Databases"},{"url":"#code-editor","title":"Code editor"}]},"frontmatter":{"title":"WebDev Setup (macOS)","description":"Basic tools for development on Apple silicon"}}},"pageContext":{"id":"fb4f4536-5eab-5dfb-9dfa-58280c54036f"}},"staticQueryHashes":["2575348879","2936798523","2940813629"]}